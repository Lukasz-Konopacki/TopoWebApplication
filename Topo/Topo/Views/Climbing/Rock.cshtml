@model Rock

<section class="Rock">
    <div class="container">

        <div class="row">
            <div class="col-12 text-center mt-3 text-white font-weight-bold">
                <h1>@Model.Name</h1>
                <div id="my-slider" class="carousel slide" data-interval="false" data-ride="carousel">

                    <ol class="carousel-indicators">
                        <li data-target="#my-slider" data-slide-to="0" class="active"></li>
                        @for (int i = 1; i < Model.Photos.Count; i++)
                        {
                            <li data-target="#my-slider" data-slide-to="@i"></li>
                        }

                    </ol>

                    <div class="carousel-inner" role="listbox">

                        <div class="carousel-item active">
                            <img class="d-block m-auto img-fluid" src="/../@Model.Photos[0].Url" alt="sokoliki">
                            <div class="carousel-caption">
                            </div>
                        </div>

                        @for (int i = 1; i < Model.Photos.Count; i++)
                        {
                            <div class="carousel-item">
                                <img class="d-block m-auto img-fluid" src="/../@Model.Photos[i].Url" alt="szczytnik">
                                <div class="carousel-caption">
                                </div>
                            </div>
                        }

                        @if (Model.Photos.Count >= 2)
                        {
                            <a class="carousel-control-prev" href="#my-slider" role="button" data-slide="prev">
                                <span class="carousel-control-prev-icon"></span>
                                <span class="sr-only">Previous</span>
                            </a>

                            <a class="carousel-control-next" href="#my-slider" role="button" data-slide="next">
                                <span class="carousel-control-next-icon"></span>
                                <span class="sr-only">Next</span>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <table class="table table-bordered table-dark align-middle text-center mt-3 mb-3 col-12">
                    <tr>
                        <th>Lp.</th>
                        <th>Nazwa</th>
                        <th>Trudność</th>
                        <th>Autor</th>
                    </tr>
                    @for (int i = 0; i < Model.Routes.Count; i++)
                    {
                        var j = i + 1;
                        var difficulty = Model.Routes[i].Difficulty.ToString().Substring(1);


                        if (difficulty.Length > 2)
                        {
                            difficulty = difficulty.Replace('p', '+');
                            difficulty = difficulty.Replace('m', '-');
                        }

                        <tr>
                            <td>@j</td>
                            <td>@Model.Routes[i].Name</td>
                            <td>@difficulty</td>
                            <td>@Model.Routes[i].Author</td>
                        </tr>
                    }
                </table>
            </div>

            <div class="my-3 col-lg-6 align-items-center">
                <div class="m-auto" id="map"></div>
            </div>
        </div>
    </div>
</section>

<script>
            @{
                var nfi = new NumberFormatInfo();
                nfi.NumberDecimalSeparator = ".";
             }

            var map;
            function initMap() {
                var location = { lat: @Model.PostionLat.ToString(nfi), lng: @Model.PostionLng.ToString(nfi)  };
                map = new google.maps.Map(document.getElementById('map'), {
                    center: location,
                    zoom: 17,
                    mapTypeId: 'terrain'
                });

                var marker = new google.maps.Marker({ position: location, map: map, icon: '/../img/marker.png' });
            }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDGkwhk2uQ_NVGmIcXDlp7gAUZuAQOfmQw&callback=initMap"
        async defer></script>

<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"
        integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
        integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
        crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"
        integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
        crossorigin="anonymous"></script>